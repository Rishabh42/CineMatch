stages:
  - test
  - deploy

test:
  image: ubuntu:latest
  stage: test
  only:
    - main
    - merge_requests
  before_script:
    - apt-get -yq update
    - apt-get -yq install software-properties-common
    - add-apt-repository -y ppa:deadsnakes/ppa
    - apt-get -yq update
    - apt-get -yq install python-minimal python2.7 python2.7-dev python3.6 python3.6-dev python3.7 python3.7-dev python-pip
    - pip install -r requirements.txt
    - cd tests
  script:
    - pytest .

deploy:
  image: ubuntu:latest
  stage: deploy
  only:
    - main
  before_script:
    - apt-get -yq update  
    - apt-get -yqq install ssh # install ssh package
    - install -m 600 -D /dev/null ~/.ssh/id_rsa # creates an empty file id_rsa with read/write permissions for the owner only
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa # decodes the base64 encoded private key and writes it to the id_rsa file
    - ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts # add the host to the list of known hosts
  script:
    - ssh $SSH_USER@$SSH_HOST "rm -rf $WORK_DIR && git clone $CI_REPOSITORY_URL && cd $WORK_DIR && git checkout main && cd app && docker compose up -d --build && exit" # ssh to the host, pull the latest changes, build the docker image and run the container
  after_script:
    - rm -rf ~/.ssh # remove the private key